{"version":3,"file":"ngx-hisb-logger.mjs","sources":["../../../projects/ngx-hisb-logger/src/lib/components/console/ngx-console.component.ts","../../../projects/ngx-hisb-logger/src/lib/components/console/ngx-console.component.html","../../../projects/ngx-hisb-logger/src/lib/modal/log-level.ts","../../../projects/ngx-hisb-logger/src/lib/modal/log-line.ts","../../../projects/ngx-hisb-logger/src/lib/services/logger.service.ts","../../../projects/ngx-hisb-logger/src/lib/ngx-hisb-logger.module.ts","../../../projects/ngx-hisb-logger/src/public-api.ts","../../../projects/ngx-hisb-logger/src/ngx-hisb-logger.ts"],"sourcesContent":["import {Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild} from '@angular/core';\nimport {LogLine} from \"../../modal/log-line\";\n\n@Component({\n    selector: 'ngx-console',\n    templateUrl: './ngx-console.component.html',\n    styleUrls: ['./ngx-console.component.css'],\n    standalone: false\n})\nexport class NgxConsoleComponent implements OnChanges{\n  @ViewChild('terminal') private myScrollContainer: ElementRef;\n  @Input() logs: LogLine[] = [];\n\n  scrollToElement(): void {\n    this.myScrollContainer.nativeElement.scroll({\n      top: this.myScrollContainer.nativeElement.scrollHeight,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if(this.myScrollContainer?.nativeElement){\n      this.scrollToElement();\n    }\n  }\n}\n","<div class=\"terminal\" #terminal>\n  @for (item of logs; track item) {\n    <div [ngClass]=\"item.level\">{{item.timeStamp | date : 'yyyy-MM-dd hh:mm:ss'}} - {{item.source}} - {{item.level}} - {{item.line}}</div>\n  }\n</div>\n","export enum LogLevel {\n  All = \"ALL\" ,\n  Debug = \"DEBUG\" ,\n  Info = \"INFO\",\n  Warn = \"WARN\",\n  Error = \"ERROR\",\n}\n","import {LogLevel} from \"./log-level\";\n\nexport class LogLine {\n  timeStamp: Date;\n  line: string;\n  level: LogLevel; // (enum w/ INFO | WARN | ERROR etc.)\n  tags: string[]; // For filtering.\n  source: string; // The source class, e.g. \"DocumentHandler\", should be able to inject this pretty easily\n  attachment?: any;\n\n  constructor(line: string, level: LogLevel, source: string, tags?: string[], attachment?: any){\n    this.timeStamp = new Date();\n    this.line = line;\n    this.level =  level;\n    this.tags = tags ?? [];\n    this.source = source;\n    this.attachment = attachment ?? null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject} from \"rxjs\";\nimport {LogLevel} from \"../modal/log-level\";\nimport {LogLine} from \"../modal/log-line\";\nimport { Clipboard } from '@angular/cdk/clipboard';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n  constructor(private clipboard: Clipboard){\n  }\n\n\n  private logStream = new BehaviorSubject<LogLine[]>([]);\n  logStream$ = this.logStream.asObservable();\n  private log(line: LogLine) {\n    this.logStream.next(this.logStream.value.concat(line));\n  }\n\n  debug(msg: string, source: string) {\n    const line: LogLine = new LogLine(msg, LogLevel.Debug, source);\n    this.log(line);\n  }\n\n  info(msg: string, source: string) {\n    const line: LogLine = new LogLine(msg, LogLevel.Info, source);\n    this.log(line);\n  }\n\n  warn(msg: string, source: string) {\n    const line: LogLine = new LogLine(msg, LogLevel.Warn, source);\n    this.log(line);\n  }\n\n  error(msg: string, source: string) {\n    const line: LogLine = new LogLine(msg, LogLevel.Error, source);\n    this.log(line);\n  }\n\n  clear() {\n    this.logStream.next([])\n  }\n\n  /**\n   * Copy the content to from the log to a clipboard.\n   * Presently the format we use is 'timestamp - log level - source (this is currently the source of the class) - message'\n   */\n  copyLogs(){\n    const logs= this.logStream.value.map(logLine=> `${logLine.timeStamp} - ${logLine.level} -${logLine.source} - ${logLine.line}`).join(\"\\n\");\n    this.clipboard.copy(logs);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxConsoleComponent } from './components/console/ngx-console.component';\nimport {AsyncPipe, CommonModule, JsonPipe} from \"@angular/common\";\nimport {LoggerService} from \"./services/logger.service\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\n\n\n@NgModule({\n  declarations: [\n    NgxConsoleComponent\n  ],\n  imports: [\n    JsonPipe,\n    AsyncPipe,\n    CommonModule,\n    BrowserModule\n  ],\n  exports: [\n    NgxConsoleComponent,\n  ],\n  providers: [\n   LoggerService\n  ]\n})\nexport class NgxHisbLoggerModule { }\n","/*\n * Public API Surface of ngx-hisb-logger\n */\n\nexport * from './lib/ngx-hisb-logger.module';\nexport * from './lib/components/console/ngx-console.component';\nexport * from './lib/services/logger.service';\nexport * from './lib/modal/log-line';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1"],"mappings":"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"}